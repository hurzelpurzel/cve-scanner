#!/usr/bin/bash
DIR=$(pwd)
DATE=$(date +%Y-%m-%dT%H:%M:%S)
SASECDIR=/var/run/secrets/kubernetes.io/serviceaccount/
LOGIN=serviceaccount:$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)
DOCKCFG=$DIR/dockerconfig/.dockerconfigjson

# $1 check ns
if [[ "$1" == "" ]]; then
  echo "Please provide project/namespace as variable e.g. scan_core <ns>"
  exit -1
else
  NAMESPACE=$1  
fi


#REGISTRY_HOST=$(oc get route default-route -n openshift-image-registry --template='{{ .spec.host }}')
IMAGES=$(kubectl get pods -n $NAMESPACE -o jsonpath='{range .items[*]}{.spec.containers[*].image}{" "}' | tr " " "\n" | sort -u)

printf "\nimages found in namespace\n$NAMESPACE:$IMAGES\n"

# scan images and write results to log file
for IMG in ${IMAGES}; do
  MYRANDOM=$RANDOM
  #if [[ $(grep '.*openshift-image-registry.svc:[0-9]*' <<< $IMG | wc -l) == 1 ]]; then
  #   skopeo copy --src-creds=$LOGIN  --src-cert-dir=$SASECDIR docker://$IMG oci-archive:$DIR/image-$MYRANDOM.tar
  #else
     skopeo copy --src-authfile=$DOCKCFG  --src-cert-dir=$SASECDIR docker://$IMG oci-archive:$DIR/image-$MYRANDOM.tar
  #fi

  GRYPE_STRING="oci-archive:$DIR/image-$MYRANDOM.tar"
  echo ""
  echo "scanning $IMG"
  RESULT=$(grype $GRYPE_STRING --scope all-layers )
  LOG=$(sed 's/\//-/g' <<< $DATE-$NAMESPACE-$IMG)
  echo "$RESULT" | tee ./$LOG.log
  rm $DIR/image-$MYRANDOM.tar
done
