#!/usr/bin/bash
DIR=$(pwd)
DATE=$(date +%Y-%m-%dT%H:%M:%S)
SASECDIR=/var/run/secrets/kubernetes.io/serviceaccount/
LOGIN=serviceaccount:$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)
DOCKCFG=$DIR/dockerconfig/.dockerconfigjson

# $1 arg is the value to grep from output
if [[ "$1" == "" ]]; then
  GREP_OUTPUT=""
else
  GREP_OUTPUT="$1"
fi

# request namespace
echo "enter namespace (for all namespaces press only enter):"
read NAMESPACE

if [[ "$NAMESPACE" == "" ]]; then
  NAMESPACE="all namespaces"
  NAMESPACE_SYNTAX="--all-namespaces"
else
  NAMESPACE_SYNTAX="-n $NAMESPACE"
fi

#REGISTRY_HOST=$(oc get route default-route -n openshift-image-registry --template='{{ .spec.host }}')
IMAGES=$(oc get pods $NAMESPACE_SYNTAX -o jsonpath='{range .items[*]}{.spec.containers[*].image}{" "}' | tr " " "\n" | sort -u)

printf "\nimages found in namespace\n$NAMESPACE:$IMAGES\n"

# scan images and write results to log file
for IMG in ${IMAGES}; do
  # --src-creds=$LOGIN
  skopeo copy --src-authfile=$DOCKCFG  --src-cert-dir=$SASECDIR docker://$IMG oci-archive:$DIR/image.tar
  #podman save -o $DIR/image.tar $IMG 
  GRYPE_STRING="oci-archive:$DIR/image.tar"
  echo ""
  echo "scanning $IMG"
  RESULT=$(grype $GRYPE_STRING --scope all-layers | grep -i "$GREP_OUTPUT")
  if [[ ! -z "$RESULT" ]]; then
    LOG=$(sed 's/\//-/g' <<< $DATE-$GREP_OUTPUT-$NAMESPACE-$IMG)
    echo "$RESULT" | tee ./$LOG.log
  fi
  rm $DIR/image.tar
  #docker image rm $IMG &> /dev/null
done
